[{"/Users/mha/Code/react-todo/src/index.js":"1","/Users/mha/Code/react-todo/src/App.js":"2","/Users/mha/Code/react-todo/src/components/TodoForm.js":"3","/Users/mha/Code/react-todo/src/components/TodoList.js":"4","/Users/mha/Code/react-todo/src/components/Todo.js":"5"},{"size":197,"mtime":1636968172513,"results":"6","hashOfConfig":"7"},{"size":257,"mtime":1637057743565,"results":"8","hashOfConfig":"7"},{"size":2289,"mtime":1637154860228,"results":"9","hashOfConfig":"7"},{"size":1997,"mtime":1637142277251,"results":"10","hashOfConfig":"7"},{"size":1248,"mtime":1637142165445,"results":"11","hashOfConfig":"7"},{"filePath":"12","messages":"13","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"ffs1m3",{"filePath":"14","messages":"15","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"16"},{"filePath":"17","messages":"18","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"19","messages":"20","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"21"},{"filePath":"22","messages":"23","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Users/mha/Code/react-todo/src/index.js",[],"/Users/mha/Code/react-todo/src/App.js",["24"],"import React from 'react';\nimport './App.css';\nimport TodoForm from './components/TodoForm';\nimport TodoList from './components/TodoList';\n\nfunction App() {\n  return (\n    <div className=\"todo-app\">\n      <TodoList />\n    </div>\n  );\n}\n\nexport default App;\n","/Users/mha/Code/react-todo/src/components/TodoForm.js",[],"/Users/mha/Code/react-todo/src/components/TodoList.js",["25"],"import React, {useState, useEffect} from 'react';\nimport TodoForm from './TodoForm';\nimport Todo from './Todo';\n\nfunction TodoList() {\n    const [todos, setTodos] = useState([]);\n    const [status, setStatus] = useState(\"all\");\n    const [filteredTodos, setFilteredTodos] = useState([]);\n    \n    useEffect(() => {\n        filterHandler();\n    },[todos, status])\n\n    const addTodo = todo => {\n        // ignore space\n        if(!todo.text || /^\\s*$/.test(todo.text)) {\n            return\n        }\n\n        const newTodos = [todo, ...todos]\n\n        setTodos(newTodos)\n    }\n    \n    const updateTodo = (id, newValue) => {\n        // ignore space\n        if(!newValue.text || /^\\s*$/.test(newValue.text)) {\n            return\n        }\n\n        setTodos(prev => prev.map(item => (item.id === id ? newValue : item)))\n    }\n\n    const removeTodo = id => {\n        const keepArr = [...todos].filter(todo => todo.id !== id)\n\n\n        setTodos(keepArr);\n    }\n\n    const completeTodo = id => {\n        let updatedTodos = todos.map(todo => {\n            if (todo.id === id){\n                console.log({todo});\n                todo.isComplete = !todo.isComplete;\n            }\n            return todo;\n        })\n        setTodos(updatedTodos);\n    }\n\n    const filterHandler = () => {\n        switch(status) {\n            case 'completed':\n                setFilteredTodos(todos.filter(todo => todo.isComplete === true));\n                break;\n            case 'uncompleted':\n                setFilteredTodos(todos.filter(todo => todo.isComplete === false));\n                break;\n            default:\n                setFilteredTodos(todos);\n                break;\n        }\n    }\n\n    return (\n        <div>\n            <h1>Harper's TODO</h1>\n            <TodoForm onSubmit={addTodo} setStatus={setStatus}/>\n            <Todo todos={todos} completeTodo={completeTodo} removeTodo={removeTodo} updateTodo={updateTodo} filteredTodos={filteredTodos}/>\n        </div>\n    )\n}\n\nexport default TodoList\n","/Users/mha/Code/react-todo/src/components/Todo.js",[],{"ruleId":"26","severity":1,"message":"27","line":3,"column":8,"nodeType":"28","messageId":"29","endLine":3,"endColumn":16},{"ruleId":"30","severity":1,"message":"31","line":12,"column":7,"nodeType":"32","endLine":12,"endColumn":22,"suggestions":"33"},"no-unused-vars","'TodoForm' is defined but never used.","Identifier","unusedVar","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'filterHandler'. Either include it or remove the dependency array.","ArrayExpression",["34"],{"desc":"35","fix":"36"},"Update the dependencies array to be: [todos, status, filterHandler]",{"range":"37","text":"38"},[346,361],"[todos, status, filterHandler]"]