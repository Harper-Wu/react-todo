{"ast":null,"code":"var _jsxFileName = \"/Users/mha/Code/react-todo-app/src/components/TodoForm.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect, useRef } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction TodoForm(props) {\n  _s();\n\n  // hooks\n  const [input, setInput] = useState('');\n  const inputRef = useRef(null);\n  useEffect(() => {\n    inputRef.current.focus();\n  }); // handle change\n\n  const handleChange = e => {\n    setInput(e.target.value);\n  }; // handle submit event\n\n\n  const handleSubmit = e => {\n    e.preventDefault(); // Create unique id for each todo\n\n    props.onSubmit({\n      id: Math.floor(Math.random() * 10000),\n      text: input\n    });\n    setInput('');\n  };\n\n  return (\n    /*#__PURE__*/\n    // Create form\n    _jsxDEV(\"form\", {\n      className: \"todo-form\",\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        placeholder: \"Add a todo\",\n        value: input,\n        name: \"text\",\n        className: \"todo-input\",\n        onChange: handleChange,\n        ref: inputRef\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"todo-button\",\n        children: \"Add todo\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 9\n    }, this)\n  );\n}\n\n_s(TodoForm, \"4bB8PA6vI65WiV8dMZT00Ka0B5A=\");\n\n_c = TodoForm;\nexport default TodoForm;\n\nvar _c;\n\n$RefreshReg$(_c, \"TodoForm\");","map":{"version":3,"sources":["/Users/mha/Code/react-todo-app/src/components/TodoForm.js"],"names":["React","useState","useEffect","useRef","TodoForm","props","input","setInput","inputRef","current","focus","handleChange","e","target","value","handleSubmit","preventDefault","onSubmit","id","Math","floor","random","text"],"mappings":";;;AAAA,OAAOA,KAAP,IACIC,QADJ,EACcC,SADd,EACyBC,MADzB,QAEO,OAFP;;;AAIA,SAASC,QAAT,CAAkBC,KAAlB,EAAyB;AAAA;;AACrB;AACA,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBN,QAAQ,CAAC,EAAD,CAAlC;AAEA,QAAMO,QAAQ,GAAGL,MAAM,CAAC,IAAD,CAAvB;AAEAD,EAAAA,SAAS,CAAC,MAAM;AACZM,IAAAA,QAAQ,CAACC,OAAT,CAAiBC,KAAjB;AACH,GAFQ,CAAT,CANqB,CAWrB;;AACA,QAAMC,YAAY,GAAGC,CAAC,IAAI;AACtBL,IAAAA,QAAQ,CAACK,CAAC,CAACC,MAAF,CAASC,KAAV,CAAR;AACH,GAFD,CAZqB,CAgBrB;;;AACA,QAAMC,YAAY,GAAGH,CAAC,IAAI;AACtBA,IAAAA,CAAC,CAACI,cAAF,GADsB,CAGtB;;AACAX,IAAAA,KAAK,CAACY,QAAN,CAAe;AACXC,MAAAA,EAAE,EAAEC,IAAI,CAACC,KAAL,CAAWD,IAAI,CAACE,MAAL,KAAgB,KAA3B,CADO;AAEXC,MAAAA,IAAI,EAAEhB;AAFK,KAAf;AAKAC,IAAAA,QAAQ,CAAC,EAAD,CAAR;AACH,GAVD;;AAYA;AAAA;AACI;AACA;AAAM,MAAA,SAAS,EAAC,WAAhB;AAA4B,MAAA,QAAQ,EAAEQ,YAAtC;AAAA,8BACI;AACI,QAAA,IAAI,EAAC,MADT;AAEI,QAAA,WAAW,EAAC,YAFhB;AAGI,QAAA,KAAK,EAAET,KAHX;AAII,QAAA,IAAI,EAAC,MAJT;AAKI,QAAA,SAAS,EAAC,YALd;AAMI,QAAA,QAAQ,EAAEK,YANd;AAOI,QAAA,GAAG,EAAEH;AAPT;AAAA;AAAA;AAAA;AAAA,cADJ,eASI;AAAQ,QAAA,SAAS,EAAC,aAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cATJ;AAAA;AAAA;AAAA;AAAA;AAAA;AAFJ;AAcH;;GA3CQJ,Q;;KAAAA,Q;AA6CT,eAAeA,QAAf","sourcesContent":["import React, {\n    useState, useEffect, useRef\n} from 'react'\n\nfunction TodoForm(props) {\n    // hooks\n    const [input, setInput] = useState('')\n\n    const inputRef = useRef(null)\n\n    useEffect(() => {\n        inputRef.current.focus()\n    })\n\n\n    // handle change\n    const handleChange = e => {\n        setInput(e.target.value);\n    }\n\n    // handle submit event\n    const handleSubmit = e => {\n        e.preventDefault();\n\n        // Create unique id for each todo\n        props.onSubmit({\n            id: Math.floor(Math.random() * 10000),\n            text: input\n        });\n\n        setInput('');\n    };\n    \n    return (\n        // Create form\n        <form className=\"todo-form\" onSubmit={handleSubmit}>\n            <input \n                type='text' \n                placeholder='Add a todo' \n                value={input} \n                name='text' \n                className='todo-input'\n                onChange={handleChange}\n                ref={inputRef}/>\n            <button className='todo-button'>Add todo</button>\n        </form>\n    )\n}\n\nexport default TodoForm\n"]},"metadata":{},"sourceType":"module"}