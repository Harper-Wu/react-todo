{"ast":null,"code":"var _jsxFileName = \"/Users/mha/Code/react-todo-app/src/components/TodoForm.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect, useRef } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nfunction TodoForm(props, setStatus) {\n  _s();\n\n  // hooks\n  // if it's eidt, keep the text value\n  const [input, setInput] = useState(props.edit ? props.edit.value : '');\n  const inputRef = useRef(null);\n  useEffect(() => {\n    inputRef.current.focus();\n  }); // handle change\n\n  const handleChange = e => {\n    setInput(e.target.value);\n  }; // handle submit event\n\n\n  const handleSubmit = e => {\n    // Prevent page refresh\n    e.preventDefault(); // Create unique id for each todo\n\n    props.onSubmit({\n      id: Math.floor(Math.random() * 10000),\n      text: input\n    });\n    setInput('');\n  };\n\n  const statusHanler = e => {\n    setTodoStatus(e.target.value);\n  };\n\n  return (\n    /*#__PURE__*/\n    // Create form\n    _jsxDEV(\"form\", {\n      className: \"todo-form\",\n      onSubmit: handleSubmit,\n      children: props.edit ? /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"input\",\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          placeholder: \"Add a todo\",\n          value: input,\n          name: \"text\",\n          className: \"todo-input\",\n          onChange: handleChange,\n          ref: inputRef\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"todo-button\",\n          children: \"Update\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 13\n      }, this) : /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"input\",\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            placeholder: \"Add a todo\",\n            value: input,\n            name: \"text\",\n            className: \"todo-input\",\n            onChange: handleChange,\n            ref: inputRef\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 58,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"todo-button\",\n            children: \"Add todo\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 66,\n            columnNumber: 21\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"select\",\n          children: /*#__PURE__*/_jsxDEV(\"select\", {\n            onChange: statusHanler,\n            name: \"todos\",\n            className: \"todo-filter\",\n            children: [/*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"all\",\n              children: \"All\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 70,\n              columnNumber: 25\n            }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"completed\",\n              children: \"Completed\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 71,\n              columnNumber: 25\n            }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"uncompleted\",\n              children: \"Unompleted\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 72,\n              columnNumber: 25\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 69,\n            columnNumber: 21\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 9\n    }, this)\n  );\n}\n\n_s(TodoForm, \"xbvrlj5lrJII/vsr6NCUo81spDI=\");\n\n_c = TodoForm;\nexport default TodoForm;\n\nvar _c;\n\n$RefreshReg$(_c, \"TodoForm\");","map":{"version":3,"sources":["/Users/mha/Code/react-todo-app/src/components/TodoForm.js"],"names":["React","useState","useEffect","useRef","TodoForm","props","setStatus","input","setInput","edit","value","inputRef","current","focus","handleChange","e","target","handleSubmit","preventDefault","onSubmit","id","Math","floor","random","text","statusHanler","setTodoStatus"],"mappings":"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","sourcesContent":["import React, {\n    useState, useEffect, useRef\n} from 'react'\n\nfunction TodoForm(props, setStatus) {\n    // hooks\n    // if it's eidt, keep the text value\n    const [input, setInput] = useState(props.edit ? props.edit.value : '')\n    \n\n    const inputRef = useRef(null)\n\n    useEffect(() => {\n        inputRef.current.focus()\n    })\n\n\n    // handle change\n    const handleChange = e => {\n        setInput(e.target.value);\n    }\n\n    // handle submit event\n    const handleSubmit = e => {\n        // Prevent page refresh\n        e.preventDefault();\n\n        // Create unique id for each todo\n        props.onSubmit({\n            id: Math.floor(Math.random() * 10000),\n            text: input\n        });\n\n        setInput('');\n    };\n\n    const statusHanler = (e) => {\n        setTodoStatus(e.target.value);\n    }\n    \n    return (\n        // Create form\n        <form className=\"todo-form\" onSubmit={handleSubmit}>\n            {props.edit ? (\n            <div className=\"input\">\n                <input \n                    type='text' \n                    placeholder='Add a todo' \n                    value={input} \n                    name='text' \n                    className='todo-input'\n                    onChange={handleChange}\n                    ref={inputRef}/>\n                <button className='todo-button'>Update</button>\n            </div>) : (\n            <>\n                <div className=\"input\">\n                    <input \n                    type='text' \n                    placeholder='Add a todo' \n                    value={input} \n                    name='text' \n                    className='todo-input'\n                    onChange={handleChange}\n                    ref={inputRef}/>\n                    <button className='todo-button'>Add todo</button>\n                </div>\n                <div className=\"select\">\n                    <select onChange={statusHanler} name=\"todos\" className=\"todo-filter\">\n                        <option value=\"all\">All</option>\n                        <option value=\"completed\">Completed</option>\n                        <option value=\"uncompleted\">Unompleted</option>\n                    </select>\n                </div>\n           </> \n            )}\n        </form>\n    )\n}\n\nexport default TodoForm\n"]},"metadata":{},"sourceType":"module"}