{"ast":null,"code":"var _jsxFileName = \"/Users/mha/Code/react-todo-app/src/components/TodoList.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport TodoForm from './TodoForm';\nimport Todo from './Todo';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction TodoList() {\n  _s();\n\n  const [todos, setTodos] = useState([]);\n  const [status, setStatus] = useState(\"all\");\n  const [filteredTodos, setFilteredTodos] = useState([]);\n\n  const addTodo = todo => {\n    // ignore space\n    if (!todo.text || /^\\s*$/.test(todo.text)) {\n      return;\n    }\n\n    const newTodos = [todo, ...todos];\n    setTodos(newTodos);\n  };\n\n  const updateTodo = (id, newValue) => {\n    // ignore space\n    if (!newValue.text || /^\\s*$/.test(newValue.text)) {\n      return;\n    }\n\n    setTodos(prev => prev.map(item => item.id === id ? newValue : item));\n  };\n\n  const removeTodo = id => {\n    const keepArr = [...todos].filter(todo => todo.id !== id);\n    setTodos(keepArr);\n  };\n\n  const completeTodo = id => {\n    let updatedTodos = todos.map(todo => {\n      if (todo.id === id) {\n        console.log(todo.isComplete);\n        todo.isComplete = !todo.isComplete;\n      }\n\n      return todo;\n    });\n    setTodos(updatedTodos);\n  };\n\n  const setTodoStatus = s => {\n    setStatus(s);\n  };\n\n  const filterHandler = () => {\n    switch (status) {\n      case 'completed':\n        setFilteredTodos(todos.filter(todo => todo.completed === true));\n        break;\n\n      case 'uncompleted':\n        setFilteredTodos(todos.filter(todo => todo.completed === false));\n        break;\n\n      default:\n        setFilteredTodos(todos);\n        break;\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Harper's TODO\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(TodoForm, {\n      onSubmit: addTodo,\n      setTodoStatus: setTodoStatus\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Todo, {\n      todos: todos,\n      completeTodo: completeTodo,\n      removeTodo: removeTodo,\n      updateTodo: updateTodo\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 67,\n    columnNumber: 9\n  }, this);\n}\n\n_s(TodoList, \"YRrvwsiRrYX/IrLJWmh5SUNxLek=\");\n\n_c = TodoList;\nexport default TodoList;\n\nvar _c;\n\n$RefreshReg$(_c, \"TodoList\");","map":{"version":3,"sources":["/Users/mha/Code/react-todo-app/src/components/TodoList.js"],"names":["React","useState","TodoForm","Todo","TodoList","todos","setTodos","status","setStatus","filteredTodos","setFilteredTodos","addTodo","todo","text","test","newTodos","updateTodo","id","newValue","prev","map","item","removeTodo","keepArr","filter","completeTodo","updatedTodos","console","log","isComplete","setTodoStatus","s","filterHandler","completed"],"mappings":"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","sourcesContent":["import React, {useState} from 'react';\nimport TodoForm from './TodoForm';\nimport Todo from './Todo';\n\nfunction TodoList() {\n    const [todos, setTodos] = useState([]);\n    const [status, setStatus] = useState(\"all\");\n    const [filteredTodos, setFilteredTodos] = useState([]);\n\n    const addTodo = todo => {\n        // ignore space\n        if(!todo.text || /^\\s*$/.test(todo.text)) {\n            return\n        }\n\n        const newTodos = [todo, ...todos]\n\n        setTodos(newTodos)\n    }\n    \n    const updateTodo = (id, newValue) => {\n        // ignore space\n        if(!newValue.text || /^\\s*$/.test(newValue.text)) {\n            return\n        }\n\n        setTodos(prev => prev.map(item => (item.id === id ? newValue : item)))\n    }\n\n    const removeTodo = id => {\n        const keepArr = [...todos].filter(todo => todo.id !== id)\n\n\n        setTodos(keepArr);\n    }\n\n    const completeTodo = id => {\n        let updatedTodos = todos.map(todo => {\n            if (todo.id === id){\n                console.log(todo.isComplete);\n                todo.isComplete = !todo.isComplete;\n            }\n            return todo;\n        })\n        setTodos(updatedTodos);\n    }\n\n    const setTodoStatus = (s) => {\n        setStatus(s);\n    }\n\n    const filterHandler = () => {\n        switch(status) {\n            case 'completed':\n                setFilteredTodos(todos.filter(todo => todo.completed === true));\n                break;\n            case 'uncompleted':\n                setFilteredTodos(todos.filter(todo => todo.completed === false));\n                break;\n            default:\n                setFilteredTodos(todos);\n                break;\n        }\n    }\n\n    return (\n        <div>\n            <h1>Harper's TODO</h1>\n            <TodoForm onSubmit={addTodo} setTodoStatus={setTodoStatus}/>\n            <Todo todos={todos} completeTodo={completeTodo} removeTodo={removeTodo} updateTodo={updateTodo}/>\n        </div>\n    )\n}\n\nexport default TodoList\n"]},"metadata":{},"sourceType":"module"}